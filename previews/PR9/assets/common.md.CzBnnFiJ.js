import{_ as o,C as r,c as p,o as d,j as t,a as n,G as i,w as e,aA as l}from"./chunks/framework.B9-3t1hq.js";const y=JSON.parse('{"title":"Common Functions","description":"","frontmatter":{},"headers":[],"relativePath":"common.md","filePath":"common.md","lastUpdated":null}'),u={name:"common.md"},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""};function c(_,s,m,D,F,f){const a=r("Badge");return d(),p("div",null,[s[16]||(s[16]=t("h1",{id:"Common-Functions",tabindex:"-1"},[n("Common Functions "),t("a",{class:"header-anchor",href:"#Common-Functions","aria-label":'Permalink to "Common Functions {#Common-Functions}"'},"â€‹")],-1)),t("details",g,[t("summary",null,[s[0]||(s[0]=t("a",{id:"FMDData.FMDData",href:"#FMDData.FMDData"},[t("span",{class:"jlbinding"},"FMDData.FMDData")],-1)),s[1]||(s[1]=n()),i(a,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[3]||(s[3]=t("p",null,"Placeholder for a short summary about FMDData.",-1)),i(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[2]||(s[2]=[t("a",{href:"https://github.com/arnold-c/FMDData/blob/8d40317de6359ba5bb04409a83675b0b7a1fe448/src/FMDData.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),t("details",k,[t("summary",null,[s[4]||(s[4]=t("a",{id:"FMDData.skip_missing_and_nan",href:"#FMDData.skip_missing_and_nan"},[t("span",{class:"jlbinding"},"FMDData.skip_missing_and_nan")],-1)),s[5]||(s[5]=n()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skip_missing_and_nan</span></span></code></pre></div><p>Convenience function to skip missing and/or NaN values in a iterator.</p><p>Returns another iterator.</p>',3)),i(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[6]||(s[6]=[t("a",{href:"https://github.com/arnold-c/FMDData/blob/8d40317de6359ba5bb04409a83675b0b7a1fe448/src/utils.jl#L21-L27",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),t("details",h,[t("summary",null,[s[8]||(s[8]=t("a",{id:"FMDData.skip_nothing",href:"#FMDData.skip_nothing"},[t("span",{class:"jlbinding"},"FMDData.skip_nothing")],-1)),s[9]||(s[9]=n()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skip_nothing</span></span></code></pre></div><p>Convenience function to skip nothing values in an iterator</p><p>Returns another iterator.</p>',3)),i(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[10]||(s[10]=[t("a",{href:"https://github.com/arnold-c/FMDData/blob/8d40317de6359ba5bb04409a83675b0b7a1fe448/src/utils.jl#L31-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),t("details",b,[t("summary",null,[s[12]||(s[12]=t("a",{id:"FMDData.update_regex-Tuple{Regex, Regex, SubstitutionString}",href:"#FMDData.update_regex-Tuple{Regex, Regex, SubstitutionString}"},[t("span",{class:"jlbinding"},"FMDData.update_regex")],-1)),s[13]||(s[13]=n()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_regex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    original_reg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Regex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    find_reg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Regex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subsitution_str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SubstitutionString</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update a Regex string using regex and a substitution string.</p>`,2)),i(a,{type:"info",class:"source-link",text:"source"},{default:e(()=>s[14]||(s[14]=[t("a",{href:"https://github.com/arnold-c/FMDData/blob/8d40317de6359ba5bb04409a83675b0b7a1fe448/src/utils.jl#L40-L48",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})])])}const j=o(u,[["render",c]]);export{y as __pageData,j as default};
