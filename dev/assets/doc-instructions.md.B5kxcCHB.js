import{_ as i,c as e,o as a,aA as t}from"./chunks/framework.CsI6At7Y.js";const k=JSON.parse('{"title":"Building the Documentation Locally","description":"","frontmatter":{},"headers":[],"relativePath":"doc-instructions.md","filePath":"doc-instructions.md","lastUpdated":null}'),n={name:"doc-instructions.md"};function l(o,s,h,p,r,d){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="Building-the-Documentation-Locally" tabindex="-1">Building the Documentation Locally <a class="header-anchor" href="#Building-the-Documentation-Locally" aria-label="Permalink to &quot;Building the Documentation Locally {#Building-the-Documentation-Locally}&quot;">​</a></h1><p>This guide provides instructions on how to build and view the documentation website for <code>FMDData.jl</code> on your local machine.</p><h2 id="Prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#Prerequisites" aria-label="Permalink to &quot;Prerequisites {#Prerequisites}&quot;">​</a></h2><ol><li><p><strong>Git:</strong> You need Git to clone the repository. You can download it from <a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">git-scm.com</a>.</p></li><li><p><strong>Julia:</strong> Ensure you have a recent version of Julia installed. You can download it from <a href="https://julialang.org/downloads/" target="_blank" rel="noreferrer">julialang.org</a>.</p></li><li><p><strong>Node.js</strong> Ensure you have Node.js installed. You can download it from <a href="https://nodejs.org/en/download" target="_blank" rel="noreferrer">https://nodejs.org</a></p></li></ol><h2 id="Setup" tabindex="-1">Setup <a class="header-anchor" href="#Setup" aria-label="Permalink to &quot;Setup {#Setup}&quot;">​</a></h2><h3 id="Clone-the-repository" tabindex="-1">Clone the repository <a class="header-anchor" href="#Clone-the-repository" aria-label="Permalink to &quot;Clone the repository {#Clone-the-repository}&quot;">​</a></h3><p>Open a terminal and clone the <code>FMDData</code> repository, then navigate into the <code>docs</code> directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/arnold-c/FMDData.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FMDData/docs</span></span></code></pre></div><h3 id="Install-Dependencies" tabindex="-1">Install Dependencies <a class="header-anchor" href="#Install-Dependencies" aria-label="Permalink to &quot;Install Dependencies {#Install-Dependencies}&quot;">​</a></h3><p>The project&#39;s documentation has both Julia and Javascript dependencies. From the <code>FMDData/docs</code> directory.</p><p>First, install the Javascript dependencies using <code>npm</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>Next, install the Julia dependencies. Start a Julia REPL in the <code>docs</code> directory (<code>julia</code>), then press <code>]</code> to enter the package manager.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x) pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> activate .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(docs) pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instantiate</span></span></code></pre></div><p>Press backspace to return to the Julia prompt.</p><h2 id="Live-Previewing-the-Documentation" tabindex="-1">Live Previewing the Documentation <a class="header-anchor" href="#Live-Previewing-the-Documentation" aria-label="Permalink to &quot;Live Previewing the Documentation {#Live-Previewing-the-Documentation}&quot;">​</a></h2><p>The project is largely already configured for live previews. Before trying to build the documentation while using the <code>{LiveServer.jl}</code> package for hot-reloading, you need to make sure you have 2 lines within the <code>MarkdownVitepress()</code> function in the <code>make.jl</code> file.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MarkdownVitepress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    repo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> repo,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devbranch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devbranch,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devurl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devurl,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    deploy_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deploy_url,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    md_output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This line ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    build_vitepress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># and this one</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>To view your changes as you make them, you will need two separate terminal sessions, both running inside the <code>FMDData/docs</code> directory.</p><p><strong>Terminal 1: Run <code>LiveServer</code></strong></p><p>In the first terminal, start Julia and run the following commands. This will serve the documentation files and automatically rebuild them when you save a change.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LiveServer</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">servedocs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foldername</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><strong>Terminal 2: Run <code>DocumenterVitepress</code></strong></p><p>In the second terminal you will need to watch for the rebuilt files and update the Vitepress site that you view in your browser. This can be done in one of two way. Either:</p><p>a) Start another Julia session and run the following julia command.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DocumenterVitepress</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DocumenterVitepress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dev_docs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, md_output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>b) If you have npm and vitepress installed, run the bash command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>With both scripts running, you can now edit the source <code>.md</code> files in the <code>docs/src</code> directory. Your changes will automatically appear in your browser.</p><h3 id="Potential-Issues" tabindex="-1">Potential Issues <a class="header-anchor" href="#Potential-Issues" aria-label="Permalink to &quot;Potential Issues {#Potential-Issues}&quot;">​</a></h3><p>If your browser redirects to a page mentioning <code>REPLACE_ME_DOCUMENTER_VITEPRESS</code>, it means <code>DocumenterVitepress</code> is not detecting the file changes from <code>LiveServer</code> quickly enough. To fix this, you can add a small delay in the documentation source file you are editing.</p><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\`\`\`@example</span></span>
<span class="line"><span>sleep(0.1)</span></span>
<span class="line"><span>\`\`\`</span></span></code></pre></div><p>A delay of <code>0.1</code> seconds is usually sufficient, but you may need to adjust it if the problem continues.</p>`,34)]))}const u=i(n,[["render",l]]);export{k as __pageData,u as default};
